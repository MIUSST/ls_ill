@c -----------------------------------------------------------------------------
@c $Id: spg.texi,v 1.9 2005/05/19 21:55:14 biloti Exp $
@c -----------------------------------------------------------------------------

@cindex minimization, multidimensional
@cindex spg

@set SPG @sc{spg}
@set SPGM Spectral Projected Gradient Method

This chapter describes the routine @value{SPG} for constrained
minimization of differentiable multidimensional functions on convex
sets.

@menu
* SPG Overview::
* SPG Parameters::
* SPG Stopping Criteria::
* SPG Example::
* SPG References and Further Reading::
@end menu

@c -----------------------------------------------------------------------------
@node SPG Overview
@section Overview
@cindex Projected gradient method
@cindex Spectral projected gradient method
@cindex quasi-Newton method
@cindex Armijo condition, nonmonotone

The @value{SPGM} is designed to minimize differentiable function on
convex sets. The SPG Method is similar to the Projected Gradient
Method, differing only by the choice of the spectral steplength, which
accelerates the convergence of the method. Despite this similarity, it
can be shown that the SPG Method is related to the quasi-Newton family
of methods.

This implementation deals with box constrained (@pxref{Brief
Theoretical Introduction} and @ref{Box Constraints}).

The @value{SPG} routine implements the version SPG2 of the Nonmonotone
@value{SPGM}, as published in Birgin @i{et al.} (2000), which differs
from the classical SPG method by the nonmonotone Armijo sufficient
decrease condition to accept a trial point @math{x_+} (@pxref{Line
Search}). This method is a competitive option for large problems,
since it has low memory requirements.

@c -----------------------------------------------------------------------------

@node SPG Parameters
@section Parameters
@cindex spg, parameters

Inside @value{SPG}, there is a set of parameters which can be
changed to improve the minimizing efforts. The parameter list,
together with the default values are given below.

@deftypevr Parameter double fmin @code{= -1.0e+99}
Value to declare @math{f} as unbounded.
@end deftypevr

@deftypevr Parameter double tol @code{= -1.0e-4}
Tolerance on the infinite norm of the projected gradient to declare
convergence.
@end deftypevr

@deftypevr Parameter size_t M @code{= 10}
Nonmonotonicity parameter. Setting @var{M} to 1 turns the method
monotone.
@end deftypevr

@deftypevr Parameter double alphamax @code{= 1.0e+30}
Upper bound to spectral step size.
@end deftypevr

@deftypevr Parameter double alphamin @code{= 1.0e-30}
Lower bound to spectral step size.
@end deftypevr

@deftypevr Parameter double gamma @code{= 1.0e-4}
Sufficient decrease parameter (@math{0<\gamma<1}).
@end deftypevr
   
@deftypevr Parameter double sigma1 @code{ = 0.1}
@deftypevrx Parameter double sigma2 @code{ = 0.9}
Bounds to the redution of the steplength.
@end deftypevr
   
@c -----------------------------------------------------------------------------

@node SPG Stopping Criteria
@section Stopping Criteria

The method declares convergence whenever the function value is equal
to or less than a prescribed value, through the @var{fmin} parameter,
or the inifinte norm of projected gradient is less than the tolerance
defined in @var{tol} parameter.

The infinite norm of the projected gradient at the current iterate can
be retrieved by calling @code{ool_conmin_minimizer_size()} function.

@c -----------------------------------------------------------------------------

@node SPG Example
@section Example

@xref{Quick Start}, for an example program which employs @value{SPG}.

@c -----------------------------------------------------------------------------

@node SPG References and Further Reading
@section References and Further Reading
@noindent
The Nonmonotone @value{SPGM} was published in the following paper,
where a full description and further references can be found.

@itemize @asis
@item E.G. Birgin, J.M. Mart@'{@dotless{i}}nez, and M. Raydan,
@cite{Nonmonotone Spectral Projected Gradient Methods on Convex Sets},
SIAM Journal on Optimization  10:1196--1211, 2000.

@end itemize
